{"ast":null,"code":"var _jsxFileName = \"/Users/nickdellorco/Desktop/DiaDragons/src/components/sections/Hero.js\";\nimport React, { useState } from \"react\";\nimport classNames from \"classnames\";\nimport { SectionProps } from \"../../utils/SectionProps\";\nimport ButtonGroup from \"../elements/ButtonGroup\";\nimport Button from \"../elements/Button\";\nimport egg from \"./../../assets/images/egg.gif\";\nimport diadragongif from \"./../../assets/images/diadragon-gif.gif\";\nimport Countdown, { zeroPad } from \"react-countdown\";\nimport Testimonial from \"./Testimonial\";\nconst alchemyKey = process.env.REACT_APP_ALCHEMY_KEY;\n\nconst contractABI = require(\"../../artifacts/contracts/DiaDragons.sol/Diadragons.json\");\n\nconst contractAddress = \"0x9c7F6bE687a6EE6Bc1C2eF28f33493F75e54413F\"; // const { createAlchemyWeb3 } = require(\"@alch/alchemy-web3\");\n// const web3 = createAlchemyWeb3(alchemyKey);\n//window.contract = new web3.eth.Contract(contractABI.abi, contractAddress);\n\nconst propTypes = { ...SectionProps.types\n};\nconst defaultProps = { ...SectionProps.defaults\n};\n\nconst mintNFT = async amount => {// try {\n  // \twindow.contract = await new web3.eth.Contract(\n  // \t\tcontractABI.abi,\n  // \t\tcontractAddress\n  // \t);\n  // \ttry {\n  // \t\tconst transactionParameters = {\n  // \t\t\tto: contractAddress, // Required except during contract publications.\n  // \t\t\tfrom: window.ethereum.selectedAddress, // must match user's active address.\n  // \t\t\tvalue: web3.utils.numberToHex(web3.utils.toWei(\".05\", \"ether\")),\n  // \t\t\tdata: window.contract.methods.mintDiaDragonTier1().encodeABI(),\n  // \t\t};\n  // \t\tconst txHash = await window.ethereum.request({\n  // \t\t\tmethod: \"eth_sendTransaction\",\n  // \t\t\tparams: [transactionParameters],\n  // \t\t});\n  // \t\treturn {\n  // \t\t\tsuccess: true,\n  // \t\t\tstatus: \"https://etherscan.io/tx/\" + txHash,\n  // \t\t};\n  // \t} catch (error) {\n  // \t\treturn {\n  // \t\t\tsuccess: false,\n  // \t\t\tstatus: \"ðŸ˜¥ Something went wrong: \" + error.message,\n  // \t\t};\n  // \t}\n  // } catch (e) {}\n};\n\nconst getTotal = async () => {// try {\n  // \twindow.contract = await new web3.eth.Contract(\n  // \t\tcontractABI.abi,\n  // \t\tcontractAddress\n  // \t);\n  // \tconst transactionParameters = {\n  // \t\tto: contractAddress, // Required except during contract publications.\n  // \t\tfrom: window.ethereum.selectedAddress, // must match user's active address.\n  // \t\tdata: window.contract.methods.getTotalSupply().encodeABI(),\n  // \t};\n  // \ttry {\n  // \t\tconst total = await window.ethereum.request({\n  // \t\t\tmethod: \"eth_call\",\n  // \t\t\tparams: [transactionParameters],\n  // \t\t});\n  // \t\ttry {\n  // \t\t\tconst test = parseInt(Number(total), 10);\n  // \t\t\treturn {\n  // \t\t\t\ttotal: test,\n  // \t\t\t};\n  // \t\t} catch (e) {\n  // \t\t\treturn {\n  // \t\t\t\ttotal: 0,\n  // \t\t\t};\n  // \t\t}\n  // \t} catch (error) {\n  // \t\treturn {\n  // \t\t\ttotal: 0,\n  // \t\t};\n  // \t}\n  // } catch (e) {\n  // \treturn {\n  // \t\ttotal: 0,\n  // \t};\n  // }\n};\n\nconst Hero = _ref => {\n  let {\n    className,\n    topOuterDivider,\n    bottomOuterDivider,\n    topDivider,\n    bottomDivider,\n    hasBgColor,\n    invertColor,\n    ...props\n  } = _ref;\n  const [videoModalActive, setVideomodalactive] = useState(false);\n  const [status, setStatus] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n  const [total, setTotal] = useState(\"\");\n\n  const totalSupply = async () => {//const { total } = await getTotal();\n    //setTotal(total);\n  };\n\n  totalSupply();\n\n  const onMintPressed = async () => {\n    const {\n      status,\n      success\n    } = await mintNFT();\n    setStatus(status);\n    setSuccess(success);\n  };\n\n  const showTx = bool => {\n    if (bool) {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        id: \"status\",\n        style: {\n          color: \"white\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        href: status,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 6\n        }\n      }, \"View Transaction\"));\n    }\n  };\n\n  const Completionist = () => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-16 mb-16\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(ButtonGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"https://diadragons.myshopify.com/collections/all\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      tag: \"a\",\n      color: \"primary\",\n      wideMobile: true,\n      id: \"mintButton\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 7\n      }\n    }, \"Shop Now\"), /*#__PURE__*/React.createElement(Button, {\n      classnames: \"ml-16\",\n      tag: \"a\",\n      color: \"primary\",\n      wideMobile: true,\n      id: \"mintButton\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 7\n      }\n    }, \"Mint with MATIC\"))));\n  }; // Renderer callback with condition\n\n\n  const renderer = _ref2 => {\n    let {\n      days,\n      hours,\n      minutes,\n      seconds,\n      completed\n    } = _ref2;\n\n    if (completed) {\n      // Render a completed state\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"m-0 mb-16\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 6\n        }\n      }, \"Welcome To Diadragons! \"), /*#__PURE__*/React.createElement(\"img\", {\n        src: diadragongif,\n        alt: \"loading...\",\n        width: 256,\n        height: 256,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 6\n        }\n      }), /*#__PURE__*/React.createElement(Completionist, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 7\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 6\n        }\n      }, showTx(success)));\n    } else {\n      // Render a countdown\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 6\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"m-0 mb-16\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 6\n        }\n      }, \"Once you have minted your Diadragon egg Join our\", \" \", /*#__PURE__*/React.createElement(\"a\", {\n        href: \"https://discord.gg/xNwzzYGupY\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 7\n        }\n      }, \"discord\"), \" and type !join in any channel to get verified!\"), /*#__PURE__*/React.createElement(\"img\", {\n        src: diadragongif,\n        alt: \"loading...\",\n        width: 256,\n        height: 256,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 6\n        }\n      }), /*#__PURE__*/React.createElement(Completionist, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 7\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 6\n        }\n      }, showTx(success)));\n    }\n  };\n\n  const outerClasses = classNames(\"hero section center-content\", topOuterDivider && \"has-top-divider\", bottomOuterDivider && \"has-bottom-divider\", hasBgColor && \"has-bg-color\", invertColor && \"invert-color\", className);\n  const innerClasses = classNames(\"hero-inner section-inner\", topDivider && \"has-top-divider\", bottomDivider && \"has-bottom-divider\");\n  return /*#__PURE__*/React.createElement(\"section\", Object.assign({}, props, {\n    className: outerClasses,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 3\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: innerClasses,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"hero-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"reveal-from-bottom\",\n    \"data-reveal-delay\": \"600\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Countdown, {\n    date: //Date.now() +\n    Date.UTC(2021, 9, 30, 17, 0, 0, 0).valueOf() - Date.now(),\n    renderer: renderer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 8\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"{innerClasses}\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"iframe\", {\n    width: \"70%\",\n    height: \"315\",\n    src: \"https://www.youtube.com/embed/0L68m7e7_9w\",\n    title: \"YouTube video player\",\n    frameBorder: \"0\",\n    allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n    allowFullScreen: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 5\n    }\n  })));\n};\n\nHero.propTypes = propTypes;\nHero.defaultProps = defaultProps;\nexport default Hero;","map":{"version":3,"sources":["/Users/nickdellorco/Desktop/DiaDragons/src/components/sections/Hero.js"],"names":["React","useState","classNames","SectionProps","ButtonGroup","Button","egg","diadragongif","Countdown","zeroPad","Testimonial","alchemyKey","process","env","REACT_APP_ALCHEMY_KEY","contractABI","require","contractAddress","propTypes","types","defaultProps","defaults","mintNFT","amount","getTotal","Hero","className","topOuterDivider","bottomOuterDivider","topDivider","bottomDivider","hasBgColor","invertColor","props","videoModalActive","setVideomodalactive","status","setStatus","success","setSuccess","total","setTotal","totalSupply","onMintPressed","showTx","bool","color","Completionist","renderer","days","hours","minutes","seconds","completed","outerClasses","innerClasses","Date","UTC","valueOf","now"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport classNames from \"classnames\";\nimport { SectionProps } from \"../../utils/SectionProps\";\nimport ButtonGroup from \"../elements/ButtonGroup\";\nimport Button from \"../elements/Button\";\nimport egg from \"./../../assets/images/egg.gif\";\nimport diadragongif from \"./../../assets/images/diadragon-gif.gif\";\nimport Countdown, { zeroPad } from \"react-countdown\";\nimport Testimonial from \"./Testimonial\";\n\nconst alchemyKey = process.env.REACT_APP_ALCHEMY_KEY;\nconst contractABI = require(\"../../artifacts/contracts/DiaDragons.sol/Diadragons.json\");\nconst contractAddress = \"0x9c7F6bE687a6EE6Bc1C2eF28f33493F75e54413F\";\n// const { createAlchemyWeb3 } = require(\"@alch/alchemy-web3\");\n// const web3 = createAlchemyWeb3(alchemyKey);\n\n//window.contract = new web3.eth.Contract(contractABI.abi, contractAddress);\n\nconst propTypes = {\n\t...SectionProps.types,\n};\n\nconst defaultProps = {\n\t...SectionProps.defaults,\n};\n\nconst mintNFT = async (amount) => {\n\t// try {\n\t// \twindow.contract = await new web3.eth.Contract(\n\t// \t\tcontractABI.abi,\n\t// \t\tcontractAddress\n\t// \t);\n\t// \ttry {\n\t// \t\tconst transactionParameters = {\n\t// \t\t\tto: contractAddress, // Required except during contract publications.\n\t// \t\t\tfrom: window.ethereum.selectedAddress, // must match user's active address.\n\t// \t\t\tvalue: web3.utils.numberToHex(web3.utils.toWei(\".05\", \"ether\")),\n\t// \t\t\tdata: window.contract.methods.mintDiaDragonTier1().encodeABI(),\n\t// \t\t};\n\t// \t\tconst txHash = await window.ethereum.request({\n\t// \t\t\tmethod: \"eth_sendTransaction\",\n\t// \t\t\tparams: [transactionParameters],\n\t// \t\t});\n\t// \t\treturn {\n\t// \t\t\tsuccess: true,\n\t// \t\t\tstatus: \"https://etherscan.io/tx/\" + txHash,\n\t// \t\t};\n\t// \t} catch (error) {\n\t// \t\treturn {\n\t// \t\t\tsuccess: false,\n\t// \t\t\tstatus: \"ðŸ˜¥ Something went wrong: \" + error.message,\n\t// \t\t};\n\t// \t}\n\t// } catch (e) {}\n};\n\nconst getTotal = async () => {\n\t// try {\n\t// \twindow.contract = await new web3.eth.Contract(\n\t// \t\tcontractABI.abi,\n\t// \t\tcontractAddress\n\t// \t);\n\t// \tconst transactionParameters = {\n\t// \t\tto: contractAddress, // Required except during contract publications.\n\t// \t\tfrom: window.ethereum.selectedAddress, // must match user's active address.\n\t// \t\tdata: window.contract.methods.getTotalSupply().encodeABI(),\n\t// \t};\n\t// \ttry {\n\t// \t\tconst total = await window.ethereum.request({\n\t// \t\t\tmethod: \"eth_call\",\n\t// \t\t\tparams: [transactionParameters],\n\t// \t\t});\n\t// \t\ttry {\n\t// \t\t\tconst test = parseInt(Number(total), 10);\n\t// \t\t\treturn {\n\t// \t\t\t\ttotal: test,\n\t// \t\t\t};\n\t// \t\t} catch (e) {\n\t// \t\t\treturn {\n\t// \t\t\t\ttotal: 0,\n\t// \t\t\t};\n\t// \t\t}\n\t// \t} catch (error) {\n\t// \t\treturn {\n\t// \t\t\ttotal: 0,\n\t// \t\t};\n\t// \t}\n\t// } catch (e) {\n\t// \treturn {\n\t// \t\ttotal: 0,\n\t// \t};\n\t// }\n};\n\nconst Hero = ({\n\tclassName,\n\ttopOuterDivider,\n\tbottomOuterDivider,\n\ttopDivider,\n\tbottomDivider,\n\thasBgColor,\n\tinvertColor,\n\t...props\n}) => {\n\tconst [videoModalActive, setVideomodalactive] = useState(false);\n\tconst [status, setStatus] = useState(\"\");\n\tconst [success, setSuccess] = useState(\"\");\n\tconst [total, setTotal] = useState(\"\");\n\tconst totalSupply = async () => {\n\t\t//const { total } = await getTotal();\n\t\t//setTotal(total);\n\t};\n\n\ttotalSupply();\n\n\tconst onMintPressed = async () => {\n\t\tconst { status, success } = await mintNFT();\n\t\tsetStatus(status);\n\t\tsetSuccess(success);\n\t};\n\n\tconst showTx = (bool) => {\n\t\tif (bool) {\n\t\t\treturn (\n\t\t\t\t<p id='status' style={{ color: \"white\" }}>\n\t\t\t\t\t<a href={status}>View Transaction</a>\n\t\t\t\t</p>\n\t\t\t);\n\t\t}\n\t};\n\n\tconst Completionist = () => {\n\t\treturn (\n\t\t\t<div className='mt-16 mb-16'>\n\t\t\t\t<ButtonGroup>\n\t\t\t\t\t<a href='https://diadragons.myshopify.com/collections/all'>\n\t\t\t\t\t\t<Button tag='a' color='primary' wideMobile id='mintButton'>\n\t\t\t\t\t\t\tShop Now\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tclassnames='ml-16'\n\t\t\t\t\t\t\ttag='a'\n\t\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\t\twideMobile\n\t\t\t\t\t\t\tid='mintButton'>\n\t\t\t\t\t\t\tMint with MATIC\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</a>\n\t\t\t\t</ButtonGroup>\n\t\t\t</div>\n\t\t);\n\t};\n\t// Renderer callback with condition\n\tconst renderer = ({ days, hours, minutes, seconds, completed }) => {\n\t\tif (completed) {\n\t\t\t// Render a completed state\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<h1 className='m-0 mb-16'>Welcome To Diadragons! </h1>\n\n\t\t\t\t\t<img src={diadragongif} alt='loading...' width={256} height={256} />\n\t\t\t\t\t{<Completionist />}\n\t\t\t\t\t<div>{showTx(success)}</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t} else {\n\t\t\t// Render a countdown\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<h2></h2>\n\t\t\t\t\t<p className='m-0 mb-16'>\n\t\t\t\t\t\tOnce you have minted your Diadragon egg Join our{\" \"}\n\t\t\t\t\t\t<a href='https://discord.gg/xNwzzYGupY'>discord</a> and type !join\n\t\t\t\t\t\tin any channel to get verified!\n\t\t\t\t\t</p>\n\n\t\t\t\t\t<img src={diadragongif} alt='loading...' width={256} height={256} />\n\t\t\t\t\t{<Completionist />}\n\t\t\t\t\t<div>{showTx(success)}</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t};\n\n\tconst outerClasses = classNames(\n\t\t\"hero section center-content\",\n\t\ttopOuterDivider && \"has-top-divider\",\n\t\tbottomOuterDivider && \"has-bottom-divider\",\n\t\thasBgColor && \"has-bg-color\",\n\t\tinvertColor && \"invert-color\",\n\t\tclassName\n\t);\n\n\tconst innerClasses = classNames(\n\t\t\"hero-inner section-inner\",\n\t\ttopDivider && \"has-top-divider\",\n\t\tbottomDivider && \"has-bottom-divider\"\n\t);\n\n\treturn (\n\t\t<section {...props} className={outerClasses}>\n\t\t\t<div className='container-sm'>\n\t\t\t\t<div className={innerClasses}>\n\t\t\t\t\t<div className='hero-content'>\n\t\t\t\t\t\t<div className='reveal-from-bottom' data-reveal-delay='600'>\n\t\t\t\t\t\t\t<Countdown\n\t\t\t\t\t\t\t\tdate={\n\t\t\t\t\t\t\t\t\t//Date.now() +\n\t\t\t\t\t\t\t\t\tDate.UTC(2021, 9, 30, 17, 0, 0, 0).valueOf() - Date.now()\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\trenderer={renderer}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className='{innerClasses}'>\n\t\t\t\t<iframe\n\t\t\t\t\twidth='70%'\n\t\t\t\t\theight='315'\n\t\t\t\t\tsrc='https://www.youtube.com/embed/0L68m7e7_9w'\n\t\t\t\t\ttitle='YouTube video player'\n\t\t\t\t\tframeBorder='0'\n\t\t\t\t\tallow='accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture'\n\t\t\t\t\tallowFullScreen></iframe>\n\t\t\t</div>\n\t\t</section>\n\t);\n};\n\nHero.propTypes = propTypes;\nHero.defaultProps = defaultProps;\n\nexport default Hero;\n"]},"metadata":{},"sourceType":"module"}
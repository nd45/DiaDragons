{"ast":null,"code":"var _jsxFileName = \"/Users/nickdellorco/Desktop/DiaDragons/src/utils/AppRoute.js\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AppRoute = _ref => {\n  let {\n    component: Component,\n    layout: Layout,\n    ...rest\n  } = _ref;\n  Layout = Layout === undefined ? props => /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: props.children\n  }, void 0, false) : Layout;\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => /*#__PURE__*/_jsxDEV(Layout, {\n      children: /*#__PURE__*/_jsxDEV(Component, { ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_c = AppRoute;\nexport default AppRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppRoute\");","map":{"version":3,"sources":["/Users/nickdellorco/Desktop/DiaDragons/src/utils/AppRoute.js"],"names":["React","Route","AppRoute","component","Component","layout","Layout","rest","undefined","props","children"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;;;;AAEA,MAAMC,QAAQ,GAAG,QAIX;AAAA,MAJY;AAChBC,IAAAA,SAAS,EAAEC,SADK;AAEhBC,IAAAA,MAAM,EAAEC,MAFQ;AAGhB,OAAGC;AAHa,GAIZ;AAEJD,EAAAA,MAAM,GAAIA,MAAM,KAAKE,SAAZ,GAAyBC,KAAK,iBAAK;AAAA,cAAGA,KAAK,CAACC;AAAT,mBAAnC,GAA4DJ,MAArE;AAEA,sBACE,QAAC,KAAD,OACMC,IADN;AAEE,IAAA,MAAM,EAAEE,KAAK,iBACX,QAAC,MAAD;AAAA,6BACE,QAAC,SAAD,OAAeA;AAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAjBD;;KAAMP,Q;AAmBN,eAAeA,QAAf","sourcesContent":["import React from 'react';\nimport { Route } from 'react-router-dom';\n\nconst AppRoute = ({\n  component: Component,\n  layout: Layout,\n  ...rest\n}) => {\n\n  Layout = (Layout === undefined) ? props => (<>{props.children}</>) : Layout;\n\n  return (\n    <Route\n      {...rest}\n      render={props => (\n        <Layout>\n          <Component {...props} />\n        </Layout>\n      )} />\n  );\n}\n\nexport default AppRoute;"]},"metadata":{},"sourceType":"module"}
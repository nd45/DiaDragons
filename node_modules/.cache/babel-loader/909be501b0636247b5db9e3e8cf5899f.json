{"ast":null,"code":"var _jsxFileName = \"/Users/nickdellorco/Desktop/open-react-template/src/components/sections/PresaleHero.js\";\nimport React, { useState } from \"react\";\nimport classNames from \"classnames\";\nimport { SectionProps } from \"../../utils/SectionProps\";\nimport ButtonGroup from \"../elements/ButtonGroup\";\nimport Button from \"../elements/Button\"; //import { mintNFT } from \"../../util/interact.js\";\n\nimport egg from \"./../../assets/images/egg.gif\";\nimport Countdown, { zeroPad } from \"react-countdown\";\nimport Select from \"react-select\";\nconst options = [{\n  value: \"0.05\",\n  label: \"1 Diadragon\"\n}, {\n  value: \"0.23\",\n  label: \"5 DiaDragons\"\n}, {\n  value: \"0.4\",\n  label: \"10 DiaDragons\"\n}, {\n  value: \"1.75\",\n  label: \"50 DiaDragons\"\n}];\nconst alchemyKey = process.env.REACT_APP_ALCHEMY_KEY;\n\nconst contractABI = require(\"../../artifacts/contracts/DiaDragons.sol/Diadragons.json\");\n\nconst contractAddress = \"0x9c7F6bE687a6EE6Bc1C2eF28f33493F75e54413F\";\n\nconst {\n  createAlchemyWeb3\n} = require(\"@alch/alchemy-web3\");\n\nconst web3 = createAlchemyWeb3(alchemyKey);\nwindow.contract = new web3.eth.Contract(contractABI.abi, contractAddress);\nconst propTypes = { ...SectionProps.types\n};\nconst defaultProps = { ...SectionProps.defaults\n};\n\nconst Hero = _ref => {\n  let {\n    className,\n    topOuterDivider,\n    bottomOuterDivider,\n    topDivider,\n    bottomDivider,\n    hasBgColor,\n    invertColor,\n    ...props\n  } = _ref;\n  const [videoModalActive, setVideomodalactive] = useState(false);\n  const [status, setStatus] = useState(\"\");\n\n  const onMintPressed = async () => {\n    const {\n      selectedOptions\n    } = state;\n    if (selectedOptions.value === undefined) selectedOptions.value = \".05\";\n    const {\n      status\n    } = await mintNFT(selectedOptions.value);\n    setStatus(status);\n  };\n\n  const state = {\n    selectedOptions: []\n  };\n\n  const setState = selected => {\n    state.selectedOptions = selected;\n  };\n\n  const handleChange = selectedOptions => {\n    setState(selectedOptions);\n  };\n\n  const mintNFT = async amount => {\n    try {\n      window.contract = await new web3.eth.Contract(contractABI.abi, contractAddress);\n      let method = window.contract.methods.mintDiaDragonTier1();\n\n      if (amount.toString() === \"0.23\") {\n        method = window.contract.methods.mintDiaDragonTier2();\n      } else if (amount.toString() === \"0.4\") {\n        console.log(\"tier3\");\n        method = window.contract.methods.mintDiaDragonTier3();\n      } else if (amount.toString() === \"1.75\") {\n        method = window.contract.methods.mintDiaDragonTier4();\n      } else {\n        method = window.contract.methods.mintDiaDragonTier1();\n      }\n\n      try {\n        const transactionParameters = {\n          to: contractAddress,\n          // Required except during contract publications.\n          from: window.ethereum.selectedAddress,\n          // must match user's active address.\n          value: web3.utils.numberToHex(web3.utils.toWei(amount, \"ether\")),\n          data: method.encodeABI()\n        };\n        const txHash = await window.ethereum.request({\n          method: \"eth_sendTransaction\",\n          params: [transactionParameters]\n        });\n        return {\n          success: true,\n          status: \"âœ… Check out your transaction on Etherscan: https://etherscan.io/tx/\" + txHash\n        };\n      } catch (error) {\n        return {\n          success: false,\n          status: \"ðŸ˜¥ Something went wrong: \" + error.message\n        };\n      }\n    } catch (e) {}\n  };\n\n  const Completionist = () => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(ButtonGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      tag: \"a\",\n      color: \"primary\",\n      wideMobile: true,\n      id: \"mintButton\",\n      onClick: onMintPressed,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 6\n      }\n    }, \"Mint DiaDragon\")), /*#__PURE__*/React.createElement(\"p\", {\n      id: \"status\",\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 5\n      }\n    }, status));\n  }; // Renderer callback with condition\n\n\n  const renderer = _ref2 => {\n    let {\n      days,\n      hours,\n      minutes,\n      seconds,\n      completed\n    } = _ref2;\n    const {\n      selectedOptions\n    } = state;\n\n    if (!completed) {\n      // Render a completed state\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"mt-0 mb-16 reveal-from-bottom\",\n        \"data-reveal-delay\": \"200\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 6\n        }\n      }, \"Coming soon\"), /*#__PURE__*/React.createElement(\"h2\", {\n        style: {\n          color: \"#23ccfa\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 6\n        }\n      }, zeroPad(days), \":\", zeroPad(hours), \":\", zeroPad(minutes), \":\", zeroPad(seconds)), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"m-0 mb-16\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 6\n        }\n      }, \"Join our Discord to be one of the first to mint a Diadragon!\"), /*#__PURE__*/React.createElement(Select, {\n        className: \"mt-0 mb-16\",\n        options: options,\n        isClearable: \"false\",\n        onChange: handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 6\n        }\n      }), selectedOptions.map(o => /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 7\n        }\n      }, o.value)));\n    } else {\n      // Render a countdown\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"mt-0 mb-16 reveal-from-bottom\",\n        \"data-reveal-delay\": \"200\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 6\n        }\n      }, \"Mint Presale\"), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"m-0 mb-16\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 6\n        }\n      }, \"Join our Discord to be one of the first to mint a Diadragon!\"), /*#__PURE__*/React.createElement(Select, {\n        className: \"mt-0 mb-16\",\n        options: options,\n        isClearable: \"false\",\n        onChange: handleChange,\n        defaultValue: options[0],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 6\n        }\n      }), selectedOptions.map(o => /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 7\n        }\n      }, o.value)), /*#__PURE__*/React.createElement(Completionist, {\n        className: \"mt-0 mb-16\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 7\n        }\n      }));\n    }\n  };\n\n  const outerClasses = classNames(\"hero section center-content\", topOuterDivider && \"has-top-divider\", bottomOuterDivider && \"has-bottom-divider\", hasBgColor && \"has-bg-color\", invertColor && \"invert-color\", className);\n  const innerClasses = classNames(\"hero-inner section-inner\", topDivider && \"has-top-divider\", bottomDivider && \"has-bottom-divider\");\n  return /*#__PURE__*/React.createElement(\"section\", Object.assign({}, props, {\n    className: outerClasses,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 3\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: innerClasses,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"hero-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"reveal-from-bottom\",\n    \"data-reveal-delay\": \"600\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Countdown, {\n    date: //Date.now() +\n    Date.UTC(2021, 9, 30, 18, 0, 0, 0).valueOf() - Date.now(),\n    renderer: renderer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 8\n    }\n  }))))));\n};\n\nHero.propTypes = propTypes;\nHero.defaultProps = defaultProps;\nexport default Hero;","map":{"version":3,"sources":["/Users/nickdellorco/Desktop/open-react-template/src/components/sections/PresaleHero.js"],"names":["React","useState","classNames","SectionProps","ButtonGroup","Button","egg","Countdown","zeroPad","Select","options","value","label","alchemyKey","process","env","REACT_APP_ALCHEMY_KEY","contractABI","require","contractAddress","createAlchemyWeb3","web3","window","contract","eth","Contract","abi","propTypes","types","defaultProps","defaults","Hero","className","topOuterDivider","bottomOuterDivider","topDivider","bottomDivider","hasBgColor","invertColor","props","videoModalActive","setVideomodalactive","status","setStatus","onMintPressed","selectedOptions","state","undefined","mintNFT","setState","selected","handleChange","amount","method","methods","mintDiaDragonTier1","toString","mintDiaDragonTier2","console","log","mintDiaDragonTier3","mintDiaDragonTier4","transactionParameters","to","from","ethereum","selectedAddress","utils","numberToHex","toWei","data","encodeABI","txHash","request","params","success","error","message","e","Completionist","color","renderer","days","hours","minutes","seconds","completed","map","o","outerClasses","innerClasses","Date","UTC","valueOf","now"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport classNames from \"classnames\";\nimport { SectionProps } from \"../../utils/SectionProps\";\nimport ButtonGroup from \"../elements/ButtonGroup\";\nimport Button from \"../elements/Button\";\n//import { mintNFT } from \"../../util/interact.js\";\nimport egg from \"./../../assets/images/egg.gif\";\nimport Countdown, { zeroPad } from \"react-countdown\";\nimport Select from \"react-select\";\n\nconst options = [\n\t{ value: \"0.05\", label: \"1 Diadragon\" },\n\t{ value: \"0.23\", label: \"5 DiaDragons\" },\n\t{ value: \"0.4\", label: \"10 DiaDragons\" },\n\t{ value: \"1.75\", label: \"50 DiaDragons\" },\n];\n\nconst alchemyKey = process.env.REACT_APP_ALCHEMY_KEY;\nconst contractABI = require(\"../../artifacts/contracts/DiaDragons.sol/Diadragons.json\");\nconst contractAddress = \"0x9c7F6bE687a6EE6Bc1C2eF28f33493F75e54413F\";\nconst { createAlchemyWeb3 } = require(\"@alch/alchemy-web3\");\nconst web3 = createAlchemyWeb3(alchemyKey);\n\nwindow.contract = new web3.eth.Contract(contractABI.abi, contractAddress);\n\nconst propTypes = {\n\t...SectionProps.types,\n};\n\nconst defaultProps = {\n\t...SectionProps.defaults,\n};\n\nconst Hero = ({\n\tclassName,\n\ttopOuterDivider,\n\tbottomOuterDivider,\n\ttopDivider,\n\tbottomDivider,\n\thasBgColor,\n\tinvertColor,\n\t...props\n}) => {\n\tconst [videoModalActive, setVideomodalactive] = useState(false);\n\tconst [status, setStatus] = useState(\"\");\n\n\tconst onMintPressed = async () => {\n\t\tconst { selectedOptions } = state;\n\n\t\tif (selectedOptions.value === undefined) selectedOptions.value = \".05\";\n\n\t\tconst { status } = await mintNFT(selectedOptions.value);\n\t\tsetStatus(status);\n\t};\n\n\tconst state = {\n\t\tselectedOptions: [],\n\t};\n\n\tconst setState = (selected) => {\n\t\tstate.selectedOptions = selected;\n\t};\n\n\tconst handleChange = (selectedOptions) => {\n\t\tsetState(selectedOptions);\n\t};\n\tconst mintNFT = async (amount) => {\n\t\ttry {\n\t\t\twindow.contract = await new web3.eth.Contract(\n\t\t\t\tcontractABI.abi,\n\t\t\t\tcontractAddress\n\t\t\t);\n\n\t\t\tlet method = window.contract.methods.mintDiaDragonTier1();\n\t\t\tif (amount.toString() === \"0.23\") {\n\t\t\t\tmethod = window.contract.methods.mintDiaDragonTier2();\n\t\t\t} else if (amount.toString() === \"0.4\") {\n\t\t\t\tconsole.log(\"tier3\");\n\n\t\t\t\tmethod = window.contract.methods.mintDiaDragonTier3();\n\t\t\t} else if (amount.toString() === \"1.75\") {\n\t\t\t\tmethod = window.contract.methods.mintDiaDragonTier4();\n\t\t\t} else {\n\t\t\t\tmethod = window.contract.methods.mintDiaDragonTier1();\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tconst transactionParameters = {\n\t\t\t\t\tto: contractAddress, // Required except during contract publications.\n\t\t\t\t\tfrom: window.ethereum.selectedAddress, // must match user's active address.\n\t\t\t\t\tvalue: web3.utils.numberToHex(web3.utils.toWei(amount, \"ether\")),\n\t\t\t\t\tdata: method.encodeABI(),\n\t\t\t\t};\n\n\t\t\t\tconst txHash = await window.ethereum.request({\n\t\t\t\t\tmethod: \"eth_sendTransaction\",\n\t\t\t\t\tparams: [transactionParameters],\n\t\t\t\t});\n\t\t\t\treturn {\n\t\t\t\t\tsuccess: true,\n\t\t\t\t\tstatus:\n\t\t\t\t\t\t\"âœ… Check out your transaction on Etherscan: https://etherscan.io/tx/\" +\n\t\t\t\t\t\ttxHash,\n\t\t\t\t};\n\t\t\t} catch (error) {\n\t\t\t\treturn {\n\t\t\t\t\tsuccess: false,\n\t\t\t\t\tstatus: \"ðŸ˜¥ Something went wrong: \" + error.message,\n\t\t\t\t};\n\t\t\t}\n\t\t} catch (e) {}\n\t};\n\n\tconst Completionist = () => {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<ButtonGroup>\n\t\t\t\t\t<Button\n\t\t\t\t\t\ttag='a'\n\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\twideMobile\n\t\t\t\t\t\tid='mintButton'\n\t\t\t\t\t\tonClick={onMintPressed}>\n\t\t\t\t\t\tMint DiaDragon\n\t\t\t\t\t</Button>\n\t\t\t\t</ButtonGroup>\n\t\t\t\t<p id='status' style={{ color: \"red\" }}>\n\t\t\t\t\t{status}\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t);\n\t};\n\t// Renderer callback with condition\n\tconst renderer = ({ days, hours, minutes, seconds, completed }) => {\n\t\tconst { selectedOptions } = state;\n\t\tif (!completed) {\n\t\t\t// Render a completed state\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<h1 className='mt-0 mb-16 reveal-from-bottom' data-reveal-delay='200'>\n\t\t\t\t\t\tComing soon\n\t\t\t\t\t</h1>\n\t\t\t\t\t<h2 style={{ color: \"#23ccfa\" }}>\n\t\t\t\t\t\t{zeroPad(days)}:{zeroPad(hours)}:{zeroPad(minutes)}:\n\t\t\t\t\t\t{zeroPad(seconds)}\n\t\t\t\t\t</h2>\n\t\t\t\t\t<p className='m-0 mb-16'>\n\t\t\t\t\t\tJoin our Discord to be one of the first to mint a Diadragon!\n\t\t\t\t\t</p>\n\t\t\t\t\t<Select\n\t\t\t\t\t\tclassName='mt-0 mb-16'\n\t\t\t\t\t\toptions={options}\n\t\t\t\t\t\tisClearable='false'\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t/>\n\t\t\t\t\t{selectedOptions.map((o) => (\n\t\t\t\t\t\t<p>{o.value}</p>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t);\n\t\t} else {\n\t\t\t// Render a countdown\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<h1 className='mt-0 mb-16 reveal-from-bottom' data-reveal-delay='200'>\n\t\t\t\t\t\tMint Presale\n\t\t\t\t\t</h1>\n\t\t\t\t\t<p className='m-0 mb-16'>\n\t\t\t\t\t\tJoin our Discord to be one of the first to mint a Diadragon!\n\t\t\t\t\t</p>\n\t\t\t\t\t<Select\n\t\t\t\t\t\tclassName='mt-0 mb-16'\n\t\t\t\t\t\toptions={options}\n\t\t\t\t\t\tisClearable='false'\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\tdefaultValue={options[0]}\n\t\t\t\t\t/>\n\t\t\t\t\t{selectedOptions.map((o) => (\n\t\t\t\t\t\t<p>{o.value}</p>\n\t\t\t\t\t))}\n\t\t\t\t\t{<Completionist className='mt-0 mb-16' />}\n\t\t\t\t\t{/* <h2 style={{ color: \"#23ccfa\" }}>\n\t\t\t\t\t\t{zeroPad(days)}:{zeroPad(hours)}:{zeroPad(minutes)}:\n\t\t\t\t\t\t{zeroPad(seconds)}\n\t\t\t\t\t</h2> */}\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t};\n\n\tconst outerClasses = classNames(\n\t\t\"hero section center-content\",\n\t\ttopOuterDivider && \"has-top-divider\",\n\t\tbottomOuterDivider && \"has-bottom-divider\",\n\t\thasBgColor && \"has-bg-color\",\n\t\tinvertColor && \"invert-color\",\n\t\tclassName\n\t);\n\n\tconst innerClasses = classNames(\n\t\t\"hero-inner section-inner\",\n\t\ttopDivider && \"has-top-divider\",\n\t\tbottomDivider && \"has-bottom-divider\"\n\t);\n\n\treturn (\n\t\t<section {...props} className={outerClasses}>\n\t\t\t<div className='container-sm'>\n\t\t\t\t<div className={innerClasses}>\n\t\t\t\t\t<div className='hero-content'>\n\t\t\t\t\t\t<div className='reveal-from-bottom' data-reveal-delay='600'>\n\t\t\t\t\t\t\t<Countdown\n\t\t\t\t\t\t\t\tdate={\n\t\t\t\t\t\t\t\t\t//Date.now() +\n\t\t\t\t\t\t\t\t\tDate.UTC(2021, 9, 30, 18, 0, 0, 0).valueOf() - Date.now()\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\trenderer={renderer}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</section>\n\t);\n};\n\nHero.propTypes = propTypes;\nHero.defaultProps = defaultProps;\n\nexport default Hero;\n"]},"metadata":{},"sourceType":"module"}
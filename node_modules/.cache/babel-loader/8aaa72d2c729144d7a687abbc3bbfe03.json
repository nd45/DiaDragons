{"ast":null,"code":"var _jsxFileName = \"/Users/nickdellorco/Desktop/DiaDagons/src/components/sections/Hero.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport classNames from \"classnames\";\nimport { SectionProps } from \"../../utils/SectionProps\";\nimport ButtonGroup from \"../elements/ButtonGroup\";\nimport Button from \"../elements/Button\";\nimport egg from \"./../../assets/images/egg.gif\";\nimport diadragongif from \"./../../assets/images/diadragon-gif.gif\";\nimport Countdown, { zeroPad } from \"react-countdown\";\nimport Testimonial from \"./Testimonial\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst alchemyKey = process.env.REACT_APP_ALCHEMY_KEY;\n\nconst contractABI = require(\"../../artifacts/contracts/DiaDragons.sol/Diadragons.json\");\n\nconst contractAddress = \"0x9c7F6bE687a6EE6Bc1C2eF28f33493F75e54413F\";\n\nconst {\n  createAlchemyWeb3\n} = require(\"@alch/alchemy-web3\");\n\nconst web3 = createAlchemyWeb3(alchemyKey);\nwindow.contract = new web3.eth.Contract(contractABI.abi, contractAddress);\nconst propTypes = { ...SectionProps.types\n};\nconst defaultProps = { ...SectionProps.defaults\n};\n\nconst mintNFT = async amount => {\n  window.contract = await new web3.eth.Contract(contractABI.abi, contractAddress);\n  const transactionParameters = {\n    to: contractAddress,\n    // Required except during contract publications.\n    from: window.ethereum.selectedAddress,\n    // must match user's active address.\n    value: web3.utils.numberToHex(web3.utils.toWei(\".05\", \"ether\")),\n    data: window.contract.methods.mintDiadragons(1).encodeABI()\n  };\n\n  try {\n    const txHash = await window.ethereum.request({\n      method: \"eth_sendTransaction\",\n      params: [transactionParameters]\n    });\n    return {\n      success: true,\n      status: \"https://etherscan.io/tx/\" + txHash\n    };\n  } catch (error) {\n    return {\n      success: false,\n      status: \"ðŸ˜¥ Something went wrong: \" + error.message\n    };\n  }\n};\n\nconst getTotal = async () => {\n  window.contract = await new web3.eth.Contract(contractABI.abi, contractAddress);\n  const transactionParameters = {\n    to: contractAddress,\n    // Required except during contract publications.\n    from: window.ethereum.selectedAddress,\n    // must match user's active address.\n    data: window.contract.methods.getTotalSupply().encodeABI()\n  };\n\n  try {\n    const txHash = await window.ethereum.request({\n      method: \"eth_call\",\n      params: [transactionParameters]\n    });\n    console.logtxH;\n    return {\n      total: txHash.toString(16)\n    };\n  } catch (error) {\n    return {\n      total: \"ðŸ˜¥ Something went wrong: \" + error.message\n    };\n  }\n};\n\nconst Hero = ({\n  className,\n  topOuterDivider,\n  bottomOuterDivider,\n  topDivider,\n  bottomDivider,\n  hasBgColor,\n  invertColor,\n  ...props\n}) => {\n  _s();\n\n  const [videoModalActive, setVideomodalactive] = useState(false);\n  const [status, setStatus] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n  const [total, setTotal] = useState(\"\");\n\n  try {\n    const test = async () => {\n      const {\n        total\n      } = await getTotal();\n      setTotal(total);\n      console.log(total);\n    };\n  } catch (e) {}\n\n  const t = test;\n  console.log(t);\n\n  const onMintPressed = async () => {\n    const {\n      status,\n      success\n    } = await mintNFT();\n    setStatus(status);\n    setSuccess(success);\n  };\n\n  const showTx = bool => {\n    if (bool) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"status\",\n        style: {\n          color: \"white\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: status,\n          children: \"View Transaction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 5\n      }, this);\n    }\n  };\n\n  const Completionist = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-16 mb-16\",\n      children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          tag: \"a\",\n          color: \"primary\",\n          wideMobile: true,\n          id: \"mintButton\",\n          onClick: onMintPressed,\n          children: \"Mint DiaDragon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 4\n    }, this);\n  }; // Renderer callback with condition\n\n\n  const renderer = ({\n    days,\n    hours,\n    minutes,\n    seconds,\n    completed\n  }) => {\n    if (completed) {\n      // Render a completed state\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"mt-0 mb-16 reveal-from-bottom\",\n          \"data-reveal-delay\": \"200\",\n          children: \"Mint Now for .05 ETH!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"m-0 mb-16\",\n          children: [\"Once you have minted your Diadragon egg Join our\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"https://discord.gg/xNwzzYGupY\",\n            children: \"discord\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 7\n          }, this), \" and type !join in any channel to get verified!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: egg,\n          alt: \"loading...\",\n          width: 256,\n          height: 256\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Completionist, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: showTx(success)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 5\n      }, this);\n    } else {\n      // Render a countdown\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"mt-0 mb-16 reveal-from-bottom\",\n          \"data-reveal-delay\": \"200\",\n          children: \"Coming soon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            color: \"#23ccfa\"\n          },\n          children: [zeroPad(days), \":\", zeroPad(hours), \":\", zeroPad(minutes), \":\", zeroPad(seconds)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"m-0 mb-16\",\n          children: \"Join our Discord to be one of the first to mint a Diadragon!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: diadragongif,\n          alt: \"loading...\",\n          width: 256,\n          height: 256\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 5\n      }, this);\n    }\n  };\n\n  const outerClasses = classNames(\"hero section center-content\", topOuterDivider && \"has-top-divider\", bottomOuterDivider && \"has-bottom-divider\", hasBgColor && \"has-bg-color\", invertColor && \"invert-color\", className);\n  const innerClasses = classNames(\"hero-inner section-inner\", topDivider && \"has-top-divider\", bottomDivider && \"has-bottom-divider\");\n  return /*#__PURE__*/_jsxDEV(\"section\", { ...props,\n    className: outerClasses,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-sm\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: innerClasses,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hero-content\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"reveal-from-bottom\",\n            \"data-reveal-delay\": \"600\",\n            children: /*#__PURE__*/_jsxDEV(Countdown, {\n              date: //Date.now() +\n              Date.UTC(2021, 9, 30, 17, 0, 0, 0).valueOf() - Date.now(),\n              renderer: renderer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"{innerClasses}\",\n      children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n        width: \"70%\",\n        height: \"315\",\n        src: \"https://www.youtube.com/embed/0L68m7e7_9w\",\n        title: \"YouTube video player\",\n        frameBorder: \"0\",\n        allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n        allowFullScreen: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 198,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Hero, \"DXlevfDzOWin6+wlTSvW287s2dA=\");\n\n_c = Hero;\nHero.propTypes = propTypes;\nHero.defaultProps = defaultProps;\nexport default Hero;\n\nvar _c;\n\n$RefreshReg$(_c, \"Hero\");","map":{"version":3,"sources":["/Users/nickdellorco/Desktop/DiaDagons/src/components/sections/Hero.js"],"names":["React","useState","classNames","SectionProps","ButtonGroup","Button","egg","diadragongif","Countdown","zeroPad","Testimonial","alchemyKey","process","env","REACT_APP_ALCHEMY_KEY","contractABI","require","contractAddress","createAlchemyWeb3","web3","window","contract","eth","Contract","abi","propTypes","types","defaultProps","defaults","mintNFT","amount","transactionParameters","to","from","ethereum","selectedAddress","value","utils","numberToHex","toWei","data","methods","mintDiadragons","encodeABI","txHash","request","method","params","success","status","error","message","getTotal","getTotalSupply","console","logtxH","total","toString","Hero","className","topOuterDivider","bottomOuterDivider","topDivider","bottomDivider","hasBgColor","invertColor","props","videoModalActive","setVideomodalactive","setStatus","setSuccess","setTotal","test","log","e","t","onMintPressed","showTx","bool","color","Completionist","renderer","days","hours","minutes","seconds","completed","outerClasses","innerClasses","Date","UTC","valueOf","now"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport classNames from \"classnames\";\nimport { SectionProps } from \"../../utils/SectionProps\";\nimport ButtonGroup from \"../elements/ButtonGroup\";\nimport Button from \"../elements/Button\";\nimport egg from \"./../../assets/images/egg.gif\";\nimport diadragongif from \"./../../assets/images/diadragon-gif.gif\";\nimport Countdown, { zeroPad } from \"react-countdown\";\nimport Testimonial from \"./Testimonial\";\n\nconst alchemyKey = process.env.REACT_APP_ALCHEMY_KEY;\nconst contractABI = require(\"../../artifacts/contracts/DiaDragons.sol/Diadragons.json\");\nconst contractAddress = \"0x9c7F6bE687a6EE6Bc1C2eF28f33493F75e54413F\";\nconst { createAlchemyWeb3 } = require(\"@alch/alchemy-web3\");\nconst web3 = createAlchemyWeb3(alchemyKey);\n\nwindow.contract = new web3.eth.Contract(contractABI.abi, contractAddress);\n\nconst propTypes = {\n\t...SectionProps.types,\n};\n\nconst defaultProps = {\n\t...SectionProps.defaults,\n};\n\nconst mintNFT = async (amount) => {\n\twindow.contract = await new web3.eth.Contract(\n\t\tcontractABI.abi,\n\t\tcontractAddress\n\t);\n\n\tconst transactionParameters = {\n\t\tto: contractAddress, // Required except during contract publications.\n\t\tfrom: window.ethereum.selectedAddress, // must match user's active address.\n\t\tvalue: web3.utils.numberToHex(web3.utils.toWei(\".05\", \"ether\")),\n\t\tdata: window.contract.methods.mintDiadragons(1).encodeABI(),\n\t};\n\n\ttry {\n\t\tconst txHash = await window.ethereum.request({\n\t\t\tmethod: \"eth_sendTransaction\",\n\t\t\tparams: [transactionParameters],\n\t\t});\n\t\treturn {\n\t\t\tsuccess: true,\n\t\t\tstatus: \"https://etherscan.io/tx/\" + txHash,\n\t\t};\n\t} catch (error) {\n\t\treturn {\n\t\t\tsuccess: false,\n\t\t\tstatus: \"ðŸ˜¥ Something went wrong: \" + error.message,\n\t\t};\n\t}\n};\n\nconst getTotal = async () => {\n\twindow.contract = await new web3.eth.Contract(\n\t\tcontractABI.abi,\n\t\tcontractAddress\n\t);\n\n\tconst transactionParameters = {\n\t\tto: contractAddress, // Required except during contract publications.\n\t\tfrom: window.ethereum.selectedAddress, // must match user's active address.\n\t\tdata: window.contract.methods.getTotalSupply().encodeABI(),\n\t};\n\n\ttry {\n\t\tconst txHash = await window.ethereum.request({\n\t\t\tmethod: \"eth_call\",\n\t\t\tparams: [transactionParameters],\n\t\t});\n\t\tconsole.logtxH\n\t\treturn {\n\t\t\ttotal: txHash.toString(16),\n\t\t};\n\t} catch (error) {\n\t\treturn {\n\t\t\ttotal: \"ðŸ˜¥ Something went wrong: \" + error.message,\n\t\t};\n\t}\n};\n\nconst Hero = ({\n\tclassName,\n\ttopOuterDivider,\n\tbottomOuterDivider,\n\ttopDivider,\n\tbottomDivider,\n\thasBgColor,\n\tinvertColor,\n\t...props\n}) => {\n\tconst [videoModalActive, setVideomodalactive] = useState(false);\n\tconst [status, setStatus] = useState(\"\");\n\tconst [success, setSuccess] = useState(\"\");\n\tconst [total, setTotal] = useState(\"\");\n\ttry {\n\t\tconst test = async () => {\n\t\t\tconst { total } = await getTotal();\n\t\t\tsetTotal(total);\n\t\t\tconsole.log(total);\n\t\t};\n\t} catch (e) {}\n\n\tconst t = test;\n\tconsole.log(t);\n\tconst onMintPressed = async () => {\n\t\tconst { status, success } = await mintNFT();\n\t\tsetStatus(status);\n\t\tsetSuccess(success);\n\t};\n\n\tconst showTx = (bool) => {\n\t\tif (bool) {\n\t\t\treturn (\n\t\t\t\t<p id='status' style={{ color: \"white\" }}>\n\t\t\t\t\t<a href={status}>View Transaction</a>\n\t\t\t\t</p>\n\t\t\t);\n\t\t}\n\t};\n\n\tconst Completionist = () => {\n\t\treturn (\n\t\t\t<div className='mt-16 mb-16'>\n\t\t\t\t<ButtonGroup>\n\t\t\t\t\t<Button\n\t\t\t\t\t\ttag='a'\n\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\twideMobile\n\t\t\t\t\t\tid='mintButton'\n\t\t\t\t\t\tonClick={onMintPressed}>\n\t\t\t\t\t\tMint DiaDragon\n\t\t\t\t\t</Button>\n\t\t\t\t</ButtonGroup>\n\t\t\t</div>\n\t\t);\n\t};\n\t// Renderer callback with condition\n\tconst renderer = ({ days, hours, minutes, seconds, completed }) => {\n\t\tif (completed) {\n\t\t\t// Render a completed state\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<h1 className='mt-0 mb-16 reveal-from-bottom' data-reveal-delay='200'>\n\t\t\t\t\t\tMint Now for .05 ETH!\n\t\t\t\t\t</h1>\n\t\t\t\t\t<h2></h2>\n\t\t\t\t\t<p className='m-0 mb-16'>\n\t\t\t\t\t\tOnce you have minted your Diadragon egg Join our{\" \"}\n\t\t\t\t\t\t<a href='https://discord.gg/xNwzzYGupY'>discord</a> and type !join\n\t\t\t\t\t\tin any channel to get verified!\n\t\t\t\t\t</p>\n\t\t\t\t\t<img src={egg} alt='loading...' width={256} height={256} />\n\t\t\t\t\t{<Completionist />}\n\t\t\t\t\t<div>{showTx(success)}</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t} else {\n\t\t\t// Render a countdown\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<h1 className='mt-0 mb-16 reveal-from-bottom' data-reveal-delay='200'>\n\t\t\t\t\t\tComing soon\n\t\t\t\t\t</h1>\n\t\t\t\t\t<h2 style={{ color: \"#23ccfa\" }}>\n\t\t\t\t\t\t{zeroPad(days)}:{zeroPad(hours)}:{zeroPad(minutes)}:\n\t\t\t\t\t\t{zeroPad(seconds)}\n\t\t\t\t\t</h2>\n\t\t\t\t\t<p className='m-0 mb-16'>\n\t\t\t\t\t\tJoin our Discord to be one of the first to mint a Diadragon!\n\t\t\t\t\t</p>\n\t\t\t\t\t<img src={diadragongif} alt='loading...' width={256} height={256} />\n\t\t\t\t\t{/* {<Completionist />} */}\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t};\n\n\tconst outerClasses = classNames(\n\t\t\"hero section center-content\",\n\t\ttopOuterDivider && \"has-top-divider\",\n\t\tbottomOuterDivider && \"has-bottom-divider\",\n\t\thasBgColor && \"has-bg-color\",\n\t\tinvertColor && \"invert-color\",\n\t\tclassName\n\t);\n\n\tconst innerClasses = classNames(\n\t\t\"hero-inner section-inner\",\n\t\ttopDivider && \"has-top-divider\",\n\t\tbottomDivider && \"has-bottom-divider\"\n\t);\n\n\treturn (\n\t\t<section {...props} className={outerClasses}>\n\t\t\t<div className='container-sm'>\n\t\t\t\t<div className={innerClasses}>\n\t\t\t\t\t<div className='hero-content'>\n\t\t\t\t\t\t<div className='reveal-from-bottom' data-reveal-delay='600'>\n\t\t\t\t\t\t\t<Countdown\n\t\t\t\t\t\t\t\tdate={\n\t\t\t\t\t\t\t\t\t//Date.now() +\n\t\t\t\t\t\t\t\t\tDate.UTC(2021, 9, 30, 17, 0, 0, 0).valueOf() - Date.now()\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\trenderer={renderer}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className='{innerClasses}'>\n\t\t\t\t<iframe\n\t\t\t\t\twidth='70%'\n\t\t\t\t\theight='315'\n\t\t\t\t\tsrc='https://www.youtube.com/embed/0L68m7e7_9w'\n\t\t\t\t\ttitle='YouTube video player'\n\t\t\t\t\tframeBorder='0'\n\t\t\t\t\tallow='accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture'\n\t\t\t\t\tallowFullScreen></iframe>\n\t\t\t</div>\n\t\t</section>\n\t);\n};\n\nHero.propTypes = propTypes;\nHero.defaultProps = defaultProps;\n\nexport default Hero;\n"]},"metadata":{},"sourceType":"module"}
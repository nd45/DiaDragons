{"ast":null,"code":"var _jsxFileName = \"/Users/nickdellorco/Desktop/DiaDragons/src/components/sections/Hero.js\";\nimport React, { useState } from \"react\";\nimport classNames from \"classnames\";\nimport { SectionProps } from \"../../utils/SectionProps\";\nimport ButtonGroup from \"../elements/ButtonGroup\";\nimport Button from \"../elements/Button\";\nimport egg from \"./../../assets/images/egg.gif\";\nimport diadragongif from \"./../../assets/images/diadragon-gif.gif\";\nimport Countdown, { zeroPad } from \"react-countdown\";\nimport Testimonial from \"./Testimonial\";\nimport detectEthereumProvider from \"@metamask/detect-provider\";\nconst alchemyKey = process.env.REACT_APP_ALCHEMY_KEY;\n\nconst contractABI = require(\"../../artifacts/contracts/DiaDragons.sol/Diadragons.json\");\n\nconst contractAddress = \"0xcc407c43572b96Be0aE774653D2a48e33aB49c3A\";\n\nconst {\n  createAlchemyWeb3\n} = require(\"@alch/alchemy-web3\");\n\nconst web3 = createAlchemyWeb3(alchemyKey);\nconst provider = detectEthereumProvider();\nwindow.contract = new web3.eth.Contract(contractABI.abi, contractAddress);\nconst propTypes = { ...SectionProps.types\n};\nconst defaultProps = { ...SectionProps.defaults\n};\n\nconst mintNFT = async amount => {\n  try {\n    console.log(\"here\");\n    window.contract = await new web3.eth.Contract(contractABI.abi, contractAddress);\n\n    try {\n      console.log(\"here\");\n      const transactionParameters = {\n        to: contractAddress,\n        //Required except during contract publications.\n        from: window.ethereum.selectedAddress,\n        // must match user's active address.\n        value: web3.utils.numberToHex(web3.utils.toWei(\"15\", \"ether\")),\n        data: window.contract.methods.mintDiadragons(1).encodeABI()\n      };\n      const txHash = await window.ethereum.request({\n        method: \"eth_sendTransaction\",\n        params: [transactionParameters]\n      });\n      return {\n        success: true,\n        status: \"https://polygonscan.io/tx/\" + txHash\n      };\n    } catch (error) {\n      return {\n        success: false,\n        status: \"ðŸ˜¥ Something went wrong: \" + error.message\n      };\n    }\n  } catch (e) {}\n};\n\nconst getTotal = async () => {\n  try {\n    window.contract = await new web3.eth.Contract(contractABI.abi, contractAddress);\n    const transactionParameters = {\n      to: contractAddress,\n      // Required except during contract publications.\n      from: window.ethereum.selectedAddress,\n      // must match user's active address.\n      data: window.contract.methods.getTotalSupply().encodeABI()\n    };\n\n    try {\n      const total = await window.ethereum.request({\n        method: \"eth_call\",\n        params: [transactionParameters]\n      });\n\n      try {\n        const test = parseInt(Number(total), 10);\n        return {\n          total: test\n        };\n      } catch (e) {\n        return {\n          total: 0\n        };\n      }\n    } catch (error) {\n      return {\n        total: 0\n      };\n    }\n  } catch (e) {\n    return {\n      total: 0\n    };\n  }\n};\n\nconst Hero = _ref => {\n  let {\n    className,\n    topOuterDivider,\n    bottomOuterDivider,\n    topDivider,\n    bottomDivider,\n    hasBgColor,\n    invertColor,\n    ...props\n  } = _ref;\n  const [videoModalActive, setVideomodalactive] = useState(false);\n  const [status, setStatus] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n  const [total, setTotal] = useState(\"\");\n\n  const totalSupply = async () => {//const { total } = await getTotal();\n    //setTotal(total);\n  };\n\n  const test = async () => {\n    try {\n      await window.ethereum.request({\n        method: \"wallet_switchEthereumChain\",\n        params: [{\n          chainId: \"0x89\"\n        }]\n      });\n    } catch (switchError) {\n      // This error code indicates that the chain has not been added to MetaMask.\n      if (switchError.code === 4902) {\n        try {\n          await window.ethereum.request({\n            method: \"wallet_addEthereumChain\",\n            params: [{\n              chainId: \"0x89\",\n              rpcUrl: \"https://polygon-rpc.com\"\n            }]\n          });\n        } catch (addError) {// handle \"add\" error\n        }\n      } // handle other \"switch\" errors\n\n    }\n  };\n\n  const trythis = async () => {\n    if (provider) {\n      console.log(\"Ethereum successfully detected!\"); // From now on, this should always be true:\n      // provider === window.ethereum\n      // Access the decentralized web!\n      // Legacy providers may only have ethereum.sendAsync\n\n      return await window.ethereum.request({\n        method: \"eth_chainId\"\n      }).then(console.log);\n    } else {// if the provider is not detected, detectEthereumProvider resolves to null\n      //\tconsole.error(\"Please install MetaMask!\", error);\n    }\n  };\n\n  const chain = trythis();\n  console.log(chain);\n\n  if (chain != '0x89') {}\n\n  totalSupply();\n\n  const onMintPressed = async () => {\n    const {\n      status,\n      success\n    } = await mintNFT();\n    setStatus(status);\n    setSuccess(success);\n  };\n\n  const showTx = bool => {\n    if (bool) {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        id: \"status\",\n        style: {\n          color: \"white\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        href: status,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 6\n        }\n      }, \"View Transaction\"));\n    }\n  };\n\n  const Completionist = () => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-16 mb-16\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(ButtonGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"https://diadragons.myshopify.com/collections/all\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      tag: \"a\",\n      color: \"primary\",\n      wideMobile: true,\n      id: \"mintButton\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 7\n      }\n    }, \"Shop Now\")), /*#__PURE__*/React.createElement(Button, {\n      className: \"ml-24\",\n      tag: \"a\",\n      color: \"primary\",\n      wideMobile: true,\n      id: \"mintButton\",\n      onClick: onMintPressed,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 6\n      }\n    }, \"Mint with MATIC\")));\n  }; // Renderer callback with condition\n\n\n  const renderer = _ref2 => {\n    let {\n      days,\n      hours,\n      minutes,\n      seconds,\n      completed\n    } = _ref2;\n\n    if (completed) {\n      // Render a completed state\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"m-0 mb-16\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 6\n        }\n      }, \"Welcome To Diadragons! \"), /*#__PURE__*/React.createElement(\"img\", {\n        src: diadragongif,\n        alt: \"loading...\",\n        width: 256,\n        height: 256,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 6\n        }\n      }), /*#__PURE__*/React.createElement(Completionist, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 7\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 6\n        }\n      }, showTx(success)));\n    } else {\n      // Render a countdown\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 6\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"m-0 mb-16\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 6\n        }\n      }, \"Once you have minted your Diadragon egg Join our\", \" \", /*#__PURE__*/React.createElement(\"a\", {\n        href: \"https://discord.gg/xNwzzYGupY\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 7\n        }\n      }, \"discord\"), \" and type !join in any channel to get verified!\"), /*#__PURE__*/React.createElement(\"img\", {\n        src: diadragongif,\n        alt: \"loading...\",\n        width: 256,\n        height: 256,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 6\n        }\n      }), /*#__PURE__*/React.createElement(Completionist, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 7\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 6\n        }\n      }, showTx(success)));\n    }\n  };\n\n  const outerClasses = classNames(\"hero section center-content\", topOuterDivider && \"has-top-divider\", bottomOuterDivider && \"has-bottom-divider\", hasBgColor && \"has-bg-color\", invertColor && \"invert-color\", className);\n  const innerClasses = classNames(\"hero-inner section-inner\", topDivider && \"has-top-divider\", bottomDivider && \"has-bottom-divider\");\n  return /*#__PURE__*/React.createElement(\"section\", Object.assign({}, props, {\n    className: outerClasses,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 3\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: innerClasses,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"hero-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"reveal-from-bottom\",\n    \"data-reveal-delay\": \"600\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Countdown, {\n    date: //Date.now() +\n    Date.UTC(2021, 9, 30, 17, 0, 0, 0).valueOf() - Date.now(),\n    renderer: renderer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 8\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"{innerClasses}\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"iframe\", {\n    width: \"70%\",\n    height: \"315\",\n    src: \"https://www.youtube.com/embed/0L68m7e7_9w\",\n    title: \"YouTube video player\",\n    frameBorder: \"0\",\n    allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n    allowFullScreen: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 5\n    }\n  })));\n};\n\nHero.propTypes = propTypes;\nHero.defaultProps = defaultProps;\nexport default Hero;","map":{"version":3,"sources":["/Users/nickdellorco/Desktop/DiaDragons/src/components/sections/Hero.js"],"names":["React","useState","classNames","SectionProps","ButtonGroup","Button","egg","diadragongif","Countdown","zeroPad","Testimonial","detectEthereumProvider","alchemyKey","process","env","REACT_APP_ALCHEMY_KEY","contractABI","require","contractAddress","createAlchemyWeb3","web3","provider","window","contract","eth","Contract","abi","propTypes","types","defaultProps","defaults","mintNFT","amount","console","log","transactionParameters","to","from","ethereum","selectedAddress","value","utils","numberToHex","toWei","data","methods","mintDiadragons","encodeABI","txHash","request","method","params","success","status","error","message","e","getTotal","getTotalSupply","total","test","parseInt","Number","Hero","className","topOuterDivider","bottomOuterDivider","topDivider","bottomDivider","hasBgColor","invertColor","props","videoModalActive","setVideomodalactive","setStatus","setSuccess","setTotal","totalSupply","chainId","switchError","code","rpcUrl","addError","trythis","then","chain","onMintPressed","showTx","bool","color","Completionist","renderer","days","hours","minutes","seconds","completed","outerClasses","innerClasses","Date","UTC","valueOf","now"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport classNames from \"classnames\";\nimport { SectionProps } from \"../../utils/SectionProps\";\nimport ButtonGroup from \"../elements/ButtonGroup\";\nimport Button from \"../elements/Button\";\nimport egg from \"./../../assets/images/egg.gif\";\nimport diadragongif from \"./../../assets/images/diadragon-gif.gif\";\nimport Countdown, { zeroPad } from \"react-countdown\";\nimport Testimonial from \"./Testimonial\";\nimport detectEthereumProvider from \"@metamask/detect-provider\";\n\nconst alchemyKey = process.env.REACT_APP_ALCHEMY_KEY;\nconst contractABI = require(\"../../artifacts/contracts/DiaDragons.sol/Diadragons.json\");\nconst contractAddress = \"0xcc407c43572b96Be0aE774653D2a48e33aB49c3A\";\nconst { createAlchemyWeb3 } = require(\"@alch/alchemy-web3\");\nconst web3 = createAlchemyWeb3(alchemyKey);\nconst provider = detectEthereumProvider();\n\nwindow.contract = new web3.eth.Contract(contractABI.abi, contractAddress);\n\nconst propTypes = {\n\t...SectionProps.types,\n};\n\nconst defaultProps = {\n\t...SectionProps.defaults,\n};\n\nconst mintNFT = async (amount) => {\n\ttry {\n\t\tconsole.log(\"here\");\n\t\twindow.contract = await new web3.eth.Contract(\n\t\t\tcontractABI.abi,\n\t\t\tcontractAddress\n\t\t);\n\t\ttry {\n\t\t\tconsole.log(\"here\");\n\n\t\t\tconst transactionParameters = {\n\t\t\t\tto: contractAddress, //Required except during contract publications.\n\t\t\t\tfrom: window.ethereum.selectedAddress, // must match user's active address.\n\t\t\t\tvalue: web3.utils.numberToHex(web3.utils.toWei(\"15\", \"ether\")),\n\t\t\t\tdata: window.contract.methods.mintDiadragons(1).encodeABI(),\n\t\t\t};\n\t\t\tconst txHash = await window.ethereum.request({\n\t\t\t\tmethod: \"eth_sendTransaction\",\n\t\t\t\tparams: [transactionParameters],\n\t\t\t});\n\t\t\treturn {\n\t\t\t\tsuccess: true,\n\t\t\t\tstatus: \"https://polygonscan.io/tx/\" + txHash,\n\t\t\t};\n\t\t} catch (error) {\n\t\t\treturn {\n\t\t\t\tsuccess: false,\n\t\t\t\tstatus: \"ðŸ˜¥ Something went wrong: \" + error.message,\n\t\t\t};\n\t\t}\n\t} catch (e) {}\n};\n\nconst getTotal = async () => {\n\ttry {\n\t\twindow.contract = await new web3.eth.Contract(\n\t\t\tcontractABI.abi,\n\t\t\tcontractAddress\n\t\t);\n\t\tconst transactionParameters = {\n\t\t\tto: contractAddress, // Required except during contract publications.\n\t\t\tfrom: window.ethereum.selectedAddress, // must match user's active address.\n\t\t\tdata: window.contract.methods.getTotalSupply().encodeABI(),\n\t\t};\n\t\ttry {\n\t\t\tconst total = await window.ethereum.request({\n\t\t\t\tmethod: \"eth_call\",\n\t\t\t\tparams: [transactionParameters],\n\t\t\t});\n\t\t\ttry {\n\t\t\t\tconst test = parseInt(Number(total), 10);\n\t\t\t\treturn {\n\t\t\t\t\ttotal: test,\n\t\t\t\t};\n\t\t\t} catch (e) {\n\t\t\t\treturn {\n\t\t\t\t\ttotal: 0,\n\t\t\t\t};\n\t\t\t}\n\t\t} catch (error) {\n\t\t\treturn {\n\t\t\t\ttotal: 0,\n\t\t\t};\n\t\t}\n\t} catch (e) {\n\t\treturn {\n\t\t\ttotal: 0,\n\t\t};\n\t}\n};\n\nconst Hero = ({\n\tclassName,\n\ttopOuterDivider,\n\tbottomOuterDivider,\n\ttopDivider,\n\tbottomDivider,\n\thasBgColor,\n\tinvertColor,\n\t...props\n}) => {\n\tconst [videoModalActive, setVideomodalactive] = useState(false);\n\tconst [status, setStatus] = useState(\"\");\n\tconst [success, setSuccess] = useState(\"\");\n\tconst [total, setTotal] = useState(\"\");\n\tconst totalSupply = async () => {\n\t\t//const { total } = await getTotal();\n\t\t//setTotal(total);\n\t};\n\n\tconst test = async () => {\n\t\ttry {\n\t\t\tawait window.ethereum.request({\n\t\t\t\tmethod: \"wallet_switchEthereumChain\",\n\t\t\t\tparams: [{ chainId: \"0x89\" }],\n\t\t\t});\n\t\t} catch (switchError) {\n\t\t\t// This error code indicates that the chain has not been added to MetaMask.\n\t\t\tif (switchError.code === 4902) {\n\t\t\t\ttry {\n\t\t\t\t\tawait window.ethereum.request({\n\t\t\t\t\t\tmethod: \"wallet_addEthereumChain\",\n\t\t\t\t\t\tparams: [{ chainId: \"0x89\", rpcUrl: \"https://polygon-rpc.com\" }],\n\t\t\t\t\t});\n\t\t\t\t} catch (addError) {\n\t\t\t\t\t// handle \"add\" error\n\t\t\t\t}\n\t\t\t}\n\t\t\t// handle other \"switch\" errors\n\t\t}\n\t};\n\n\tconst trythis = async () => {\n\t\tif (provider) {\n\t\t\tconsole.log(\"Ethereum successfully detected!\");\n\n\t\t\t// From now on, this should always be true:\n\t\t\t// provider === window.ethereum\n\n\t\t\t// Access the decentralized web!\n\n\t\t\t// Legacy providers may only have ethereum.sendAsync\n\t\t\treturn await window.ethereum\n\t\t\t\t.request({\n\t\t\t\t\tmethod: \"eth_chainId\",\n\t\t\t\t})\n\t\t\t\t.then(console.log);\n\t\t} else {\n\t\t\t// if the provider is not detected, detectEthereumProvider resolves to null\n\t\t\t//\tconsole.error(\"Please install MetaMask!\", error);\n\t\t}\n\t};\n\tconst chain = trythis();\n\n\tconsole.log(chain);\n\tif(chain != '0x89'){\n\n\t}\n\n\t\n\n\ttotalSupply();\n\n\tconst onMintPressed = async () => {\n\t\tconst { status, success } = await mintNFT();\n\t\tsetStatus(status);\n\t\tsetSuccess(success);\n\t};\n\n\tconst showTx = (bool) => {\n\t\tif (bool) {\n\t\t\treturn (\n\t\t\t\t<p id='status' style={{ color: \"white\" }}>\n\t\t\t\t\t<a href={status}>View Transaction</a>\n\t\t\t\t</p>\n\t\t\t);\n\t\t}\n\t};\n\n\tconst Completionist = () => {\n\t\treturn (\n\t\t\t<div className='mt-16 mb-16'>\n\t\t\t\t<ButtonGroup>\n\t\t\t\t\t<a href='https://diadragons.myshopify.com/collections/all'>\n\t\t\t\t\t\t<Button tag='a' color='primary' wideMobile id='mintButton'>\n\t\t\t\t\t\t\tShop Now\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</a>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tclassName='ml-24'\n\t\t\t\t\t\ttag='a'\n\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\twideMobile\n\t\t\t\t\t\tid='mintButton'\n\t\t\t\t\t\tonClick={onMintPressed}>\n\t\t\t\t\t\tMint with MATIC\n\t\t\t\t\t</Button>\n\t\t\t\t</ButtonGroup>\n\t\t\t</div>\n\t\t);\n\t};\n\t// Renderer callback with condition\n\tconst renderer = ({ days, hours, minutes, seconds, completed }) => {\n\t\tif (completed) {\n\t\t\t// Render a completed state\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<h1 className='m-0 mb-16'>Welcome To Diadragons! </h1>\n\n\t\t\t\t\t<img src={diadragongif} alt='loading...' width={256} height={256} />\n\t\t\t\t\t{<Completionist />}\n\t\t\t\t\t<div>{showTx(success)}</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t} else {\n\t\t\t// Render a countdown\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<h2></h2>\n\t\t\t\t\t<p className='m-0 mb-16'>\n\t\t\t\t\t\tOnce you have minted your Diadragon egg Join our{\" \"}\n\t\t\t\t\t\t<a href='https://discord.gg/xNwzzYGupY'>discord</a> and type !join\n\t\t\t\t\t\tin any channel to get verified!\n\t\t\t\t\t</p>\n\n\t\t\t\t\t<img src={diadragongif} alt='loading...' width={256} height={256} />\n\t\t\t\t\t{<Completionist />}\n\t\t\t\t\t<div>{showTx(success)}</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t};\n\n\tconst outerClasses = classNames(\n\t\t\"hero section center-content\",\n\t\ttopOuterDivider && \"has-top-divider\",\n\t\tbottomOuterDivider && \"has-bottom-divider\",\n\t\thasBgColor && \"has-bg-color\",\n\t\tinvertColor && \"invert-color\",\n\t\tclassName\n\t);\n\n\tconst innerClasses = classNames(\n\t\t\"hero-inner section-inner\",\n\t\ttopDivider && \"has-top-divider\",\n\t\tbottomDivider && \"has-bottom-divider\"\n\t);\n\n\treturn (\n\t\t<section {...props} className={outerClasses}>\n\t\t\t<div className='container-sm'>\n\t\t\t\t<div className={innerClasses}>\n\t\t\t\t\t<div className='hero-content'>\n\t\t\t\t\t\t<div className='reveal-from-bottom' data-reveal-delay='600'>\n\t\t\t\t\t\t\t<Countdown\n\t\t\t\t\t\t\t\tdate={\n\t\t\t\t\t\t\t\t\t//Date.now() +\n\t\t\t\t\t\t\t\t\tDate.UTC(2021, 9, 30, 17, 0, 0, 0).valueOf() - Date.now()\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\trenderer={renderer}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className='{innerClasses}'>\n\t\t\t\t<iframe\n\t\t\t\t\twidth='70%'\n\t\t\t\t\theight='315'\n\t\t\t\t\tsrc='https://www.youtube.com/embed/0L68m7e7_9w'\n\t\t\t\t\ttitle='YouTube video player'\n\t\t\t\t\tframeBorder='0'\n\t\t\t\t\tallow='accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture'\n\t\t\t\t\tallowFullScreen></iframe>\n\t\t\t</div>\n\t\t</section>\n\t);\n};\n\nHero.propTypes = propTypes;\nHero.defaultProps = defaultProps;\n\nexport default Hero;\n"]},"metadata":{},"sourceType":"module"}
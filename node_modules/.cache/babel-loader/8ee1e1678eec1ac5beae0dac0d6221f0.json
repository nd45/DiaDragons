{"ast":null,"code":"var _jsxFileName = \"/Users/nickdellorco/Desktop/DiaDagons/src/components/sections/PresaleHero.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport classNames from \"classnames\";\nimport { SectionProps } from \"../../utils/SectionProps\";\nimport ButtonGroup from \"../elements/ButtonGroup\";\nimport Button from \"../elements/Button\"; //import { mintNFT } from \"../../util/interact.js\";\n\nimport egg from \"./../../assets/images/egg.gif\";\nimport Countdown, { zeroPad } from \"react-countdown\";\nimport Select from \"react-select\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = [{\n  value: \"0.05\",\n  label: \"1 Diadragon\"\n}, {\n  value: \"0.23\",\n  label: \"5 DiaDragons\"\n}, {\n  value: \"0.4\",\n  label: \"10 DiaDragons\"\n}, {\n  value: \"1.75\",\n  label: \"50 DiaDragons\"\n}];\nconst alchemyKey = process.env.REACT_APP_ALCHEMY_KEY;\n\nconst contractABI = require(\"../../artifacts/contracts/DiaDragons.sol/Diadragons.json\");\n\nconst contractAddress = \"0x1F9E51199D587190120C8180D0Ce0B9bd61D0229\";\n\nconst {\n  createAlchemyWeb3\n} = require(\"@alch/alchemy-web3\");\n\nconst web3 = createAlchemyWeb3(alchemyKey);\nwindow.contract = new web3.eth.Contract(contractABI.abi, contractAddress);\nconst propTypes = { ...SectionProps.types\n};\nconst defaultProps = { ...SectionProps.defaults\n};\n\nconst Hero = ({\n  className,\n  topOuterDivider,\n  bottomOuterDivider,\n  topDivider,\n  bottomDivider,\n  hasBgColor,\n  invertColor,\n  ...props\n}) => {\n  _s();\n\n  const [videoModalActive, setVideomodalactive] = useState(false);\n  const [status, setStatus] = useState(\"\");\n\n  const onMintPressed = async () => {\n    const {\n      selectedOptions\n    } = state;\n    console.log(\"test\" + selectedOptions.value);\n    const {\n      status\n    } = await mintNFT(selectedOptions.value);\n    setStatus(status);\n  };\n\n  const state = {\n    selectedOptions: []\n  };\n\n  const setState = selected => {\n    state.selectedOptions = selected;\n  };\n\n  const handleChange = selectedOptions => {\n    setState(selectedOptions);\n  };\n\n  const mintNFT = async amount => {\n    window.contract = await new web3.eth.Contract(contractABI.abi, contractAddress);\n    const transactionParameters = {\n      to: contractAddress,\n      // Required except during contract publications.\n      from: window.ethereum.selectedAddress,\n      // must match user's active address.\n      value: web3.utils.numberToHex(web3.utils.toWei(amount, \"ether\")),\n      data: window.contract.methods.mintDiadragons(2).encodeABI()\n    };\n\n    try {\n      const txHash = await window.ethereum.request({\n        method: \"eth_sendTransaction\",\n        params: [transactionParameters]\n      });\n      return {\n        success: true,\n        status: \"âœ… Check out your transaction on Etherscan: https://rinkeby.etherscan.io/tx/\" + txHash\n      };\n    } catch (error) {\n      return {\n        success: false,\n        status: \"ðŸ˜¥ Something went wrong: \" + error.message\n      };\n    }\n  };\n\n  const Completionist = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(ButtonGroup, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          tag: \"a\",\n          color: \"primary\",\n          wideMobile: true,\n          id: \"mintButton\",\n          onClick: onMintPressed,\n          children: \"Mint DiaDragon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"status\",\n        style: {\n          color: \"red\"\n        },\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 4\n    }, this);\n  }; // Renderer callback with condition\n\n\n  const renderer = ({\n    days,\n    hours,\n    minutes,\n    seconds,\n    completed\n  }) => {\n    const {\n      selectedOptions\n    } = state;\n    state.selectedOptions = \".05\";\n\n    if (!completed) {\n      // Render a completed state\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"mt-0 mb-16 reveal-from-bottom\",\n          \"data-reveal-delay\": \"200\",\n          children: \"Coming soon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            color: \"#23ccfa\"\n          },\n          children: [zeroPad(days), \":\", zeroPad(hours), \":\", zeroPad(minutes), \":\", zeroPad(seconds)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"m-0 mb-16\",\n          children: \"Join our Discord to be one of the first to mint a Diadragon!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          className: \"mt-0 mb-16\",\n          options: options,\n          isClearable: \"false\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 6\n        }, this), selectedOptions.map(o => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: o.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 7\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 5\n      }, this);\n    } else {\n      // Render a countdown\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"mt-0 mb-16 reveal-from-bottom\",\n          \"data-reveal-delay\": \"200\",\n          children: \"Mint Presale\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"m-0 mb-16\",\n          children: \"Join our Discord to be one of the first to mint a Diadragon!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          className: \"mt-0 mb-16\",\n          options: options,\n          isClearable: \"false\",\n          onChange: handleChange,\n          defaultValue: options[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 6\n        }, this), selectedOptions.map(o => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: o.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 7\n        }, this)), /*#__PURE__*/_jsxDEV(Completionist, {\n          className: \"mt-0 mb-16\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 5\n      }, this);\n    }\n  };\n\n  const outerClasses = classNames(\"hero section center-content\", topOuterDivider && \"has-top-divider\", bottomOuterDivider && \"has-bottom-divider\", hasBgColor && \"has-bg-color\", invertColor && \"invert-color\", className);\n  const innerClasses = classNames(\"hero-inner section-inner\", topDivider && \"has-top-divider\", bottomDivider && \"has-bottom-divider\");\n  return /*#__PURE__*/_jsxDEV(\"section\", { ...props,\n    className: outerClasses,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-sm\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: innerClasses,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hero-content\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"reveal-from-bottom\",\n            \"data-reveal-delay\": \"600\",\n            children: /*#__PURE__*/_jsxDEV(Countdown, {\n              date: //Date.now() +\n              Date.UTC(2021, 9, 30, 18, 0, 0, 0).valueOf() - Date.now(),\n              renderer: renderer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 193,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Hero, \"EvJHl30AQBEymJZTt1XFCEcgaeo=\");\n\n_c = Hero;\nHero.propTypes = propTypes;\nHero.defaultProps = defaultProps;\nexport default Hero;\n\nvar _c;\n\n$RefreshReg$(_c, \"Hero\");","map":{"version":3,"sources":["/Users/nickdellorco/Desktop/DiaDagons/src/components/sections/PresaleHero.js"],"names":["React","useState","classNames","SectionProps","ButtonGroup","Button","egg","Countdown","zeroPad","Select","options","value","label","alchemyKey","process","env","REACT_APP_ALCHEMY_KEY","contractABI","require","contractAddress","createAlchemyWeb3","web3","window","contract","eth","Contract","abi","propTypes","types","defaultProps","defaults","Hero","className","topOuterDivider","bottomOuterDivider","topDivider","bottomDivider","hasBgColor","invertColor","props","videoModalActive","setVideomodalactive","status","setStatus","onMintPressed","selectedOptions","state","console","log","mintNFT","setState","selected","handleChange","amount","transactionParameters","to","from","ethereum","selectedAddress","utils","numberToHex","toWei","data","methods","mintDiadragons","encodeABI","txHash","request","method","params","success","error","message","Completionist","color","renderer","days","hours","minutes","seconds","completed","map","o","outerClasses","innerClasses","Date","UTC","valueOf","now"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport classNames from \"classnames\";\nimport { SectionProps } from \"../../utils/SectionProps\";\nimport ButtonGroup from \"../elements/ButtonGroup\";\nimport Button from \"../elements/Button\";\n//import { mintNFT } from \"../../util/interact.js\";\nimport egg from \"./../../assets/images/egg.gif\";\nimport Countdown, { zeroPad } from \"react-countdown\";\nimport Select from \"react-select\";\n\nconst options = [\n\t{ value: \"0.05\", label: \"1 Diadragon\" },\n\t{ value: \"0.23\", label: \"5 DiaDragons\" },\n\t{ value: \"0.4\", label: \"10 DiaDragons\" },\n\t{ value: \"1.75\", label: \"50 DiaDragons\" },\n];\n\nconst alchemyKey = process.env.REACT_APP_ALCHEMY_KEY;\nconst contractABI = require(\"../../artifacts/contracts/DiaDragons.sol/Diadragons.json\");\nconst contractAddress = \"0x1F9E51199D587190120C8180D0Ce0B9bd61D0229\";\nconst { createAlchemyWeb3 } = require(\"@alch/alchemy-web3\");\nconst web3 = createAlchemyWeb3(alchemyKey);\n\nwindow.contract = new web3.eth.Contract(contractABI.abi, contractAddress);\n\nconst propTypes = {\n\t...SectionProps.types,\n};\n\nconst defaultProps = {\n\t...SectionProps.defaults,\n};\n\nconst Hero = ({\n\tclassName,\n\ttopOuterDivider,\n\tbottomOuterDivider,\n\ttopDivider,\n\tbottomDivider,\n\thasBgColor,\n\tinvertColor,\n\t...props\n}) => {\n\tconst [videoModalActive, setVideomodalactive] = useState(false);\n\tconst [status, setStatus] = useState(\"\");\n\n\tconst onMintPressed = async () => {\n\t\tconst { selectedOptions } = state;\n\n\t\tconsole.log(\"test\" + selectedOptions.value);\n\n\t\tconst { status } = await mintNFT(selectedOptions.value);\n\t\tsetStatus(status);\n\t};\n\n\tconst state = {\n\t\tselectedOptions: [],\n\t};\n\n\tconst setState = (selected) => {\n\t\tstate.selectedOptions = selected;\n\t};\n\n\tconst handleChange = (selectedOptions) => {\n\t\tsetState(selectedOptions);\n\t};\n\tconst mintNFT = async (amount) => {\n\t\twindow.contract = await new web3.eth.Contract(\n\t\t\tcontractABI.abi,\n\t\t\tcontractAddress\n\t\t);\n\n\t\tconst transactionParameters = {\n\t\t\tto: contractAddress, // Required except during contract publications.\n\t\t\tfrom: window.ethereum.selectedAddress, // must match user's active address.\n\t\t\tvalue: web3.utils.numberToHex(web3.utils.toWei(amount, \"ether\")),\n\t\t\tdata: window.contract.methods.mintDiadragons(2).encodeABI(),\n\t\t};\n\n\t\ttry {\n\t\t\tconst txHash = await window.ethereum.request({\n\t\t\t\tmethod: \"eth_sendTransaction\",\n\t\t\t\tparams: [transactionParameters],\n\t\t\t});\n\t\t\treturn {\n\t\t\t\tsuccess: true,\n\t\t\t\tstatus:\n\t\t\t\t\t\"âœ… Check out your transaction on Etherscan: https://rinkeby.etherscan.io/tx/\" +\n\t\t\t\t\ttxHash,\n\t\t\t};\n\t\t} catch (error) {\n\t\t\treturn {\n\t\t\t\tsuccess: false,\n\t\t\t\tstatus: \"ðŸ˜¥ Something went wrong: \" + error.message,\n\t\t\t};\n\t\t}\n\t};\n\n\tconst Completionist = () => {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<ButtonGroup>\n\t\t\t\t\t<Button\n\t\t\t\t\t\ttag='a'\n\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\twideMobile\n\t\t\t\t\t\tid='mintButton'\n\t\t\t\t\t\tonClick={onMintPressed}>\n\t\t\t\t\t\tMint DiaDragon\n\t\t\t\t\t</Button>\n\t\t\t\t</ButtonGroup>\n\t\t\t\t<p id='status' style={{ color: \"red\" }}>\n\t\t\t\t\t{status}\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t);\n\t};\n\t// Renderer callback with condition\n\tconst renderer = ({ days, hours, minutes, seconds, completed }) => {\n\t\tconst { selectedOptions } = state;\n\t\tstate.selectedOptions = \".05\";\n\t\tif (!completed) {\n\t\t\t// Render a completed state\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<h1 className='mt-0 mb-16 reveal-from-bottom' data-reveal-delay='200'>\n\t\t\t\t\t\tComing soon\n\t\t\t\t\t</h1>\n\t\t\t\t\t<h2 style={{ color: \"#23ccfa\" }}>\n\t\t\t\t\t\t{zeroPad(days)}:{zeroPad(hours)}:{zeroPad(minutes)}:\n\t\t\t\t\t\t{zeroPad(seconds)}\n\t\t\t\t\t</h2>\n\t\t\t\t\t<p className='m-0 mb-16'>\n\t\t\t\t\t\tJoin our Discord to be one of the first to mint a Diadragon!\n\t\t\t\t\t</p>\n\t\t\t\t\t<Select\n\t\t\t\t\t\tclassName='mt-0 mb-16'\n\t\t\t\t\t\toptions={options}\n\t\t\t\t\t\tisClearable='false'\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t/>\n\t\t\t\t\t{selectedOptions.map((o) => (\n\t\t\t\t\t\t<p>{o.value}</p>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t);\n\t\t} else {\n\t\t\t// Render a countdown\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<h1 className='mt-0 mb-16 reveal-from-bottom' data-reveal-delay='200'>\n\t\t\t\t\t\tMint Presale\n\t\t\t\t\t</h1>\n\t\t\t\t\t<p className='m-0 mb-16'>\n\t\t\t\t\t\tJoin our Discord to be one of the first to mint a Diadragon!\n\t\t\t\t\t</p>\n\t\t\t\t\t<Select\n\t\t\t\t\t\tclassName='mt-0 mb-16'\n\t\t\t\t\t\toptions={options}\n\t\t\t\t\t\tisClearable='false'\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\tdefaultValue={options[0]}\n\t\t\t\t\t/>\n\t\t\t\t\t{selectedOptions.map((o) => (\n\t\t\t\t\t\t<p>{o.value}</p>\n\t\t\t\t\t))}\n\t\t\t\t\t{<Completionist className='mt-0 mb-16' />}\n\t\t\t\t\t{/* <h2 style={{ color: \"#23ccfa\" }}>\n\t\t\t\t\t\t{zeroPad(days)}:{zeroPad(hours)}:{zeroPad(minutes)}:\n\t\t\t\t\t\t{zeroPad(seconds)}\n\t\t\t\t\t</h2> */}\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t};\n\n\tconst outerClasses = classNames(\n\t\t\"hero section center-content\",\n\t\ttopOuterDivider && \"has-top-divider\",\n\t\tbottomOuterDivider && \"has-bottom-divider\",\n\t\thasBgColor && \"has-bg-color\",\n\t\tinvertColor && \"invert-color\",\n\t\tclassName\n\t);\n\n\tconst innerClasses = classNames(\n\t\t\"hero-inner section-inner\",\n\t\ttopDivider && \"has-top-divider\",\n\t\tbottomDivider && \"has-bottom-divider\"\n\t);\n\n\treturn (\n\t\t<section {...props} className={outerClasses}>\n\t\t\t<div className='container-sm'>\n\t\t\t\t<div className={innerClasses}>\n\t\t\t\t\t<div className='hero-content'>\n\t\t\t\t\t\t<div className='reveal-from-bottom' data-reveal-delay='600'>\n\t\t\t\t\t\t\t<Countdown\n\t\t\t\t\t\t\t\tdate={\n\t\t\t\t\t\t\t\t\t//Date.now() +\n\t\t\t\t\t\t\t\t\tDate.UTC(2021, 9, 30, 18, 0, 0, 0).valueOf() - Date.now()\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\trenderer={renderer}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</section>\n\t);\n};\n\nHero.propTypes = propTypes;\nHero.defaultProps = defaultProps;\n\nexport default Hero;\n"]},"metadata":{},"sourceType":"module"}